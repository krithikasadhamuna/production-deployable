# NGINX Configuration for CodeGrey SOC Platform
# Place this file in /etc/nginx/sites-available/soc_platform.conf
# Then symlink: ln -s /etc/nginx/sites-available/soc_platform.conf /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name dev.codegrey.ai;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name dev.codegrey.ai;
    
    # SSL Configuration (you'll need to get SSL certificates)
    ssl_certificate /etc/letsencrypt/live/dev.codegrey.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev.codegrey.ai/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Request size limits (for log uploads)
    client_max_body_size 100M;
    client_body_buffer_size 10M;
    
    # Proxy timeouts
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;
    
    # Main application proxy
    location / {
        proxy_pass http://127.0.0.1:5000;  # Flask app running on port 5000
        proxy_http_version 1.1;
        
        # Headers for proper proxying
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support (for real-time features)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # API endpoints
    location /api/ {
        proxy_pass http://127.0.0.1:5000/api/;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers (if needed)
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
        
        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;
        }
    }
    
    # Agent communication endpoints
    location /agents/ {
        proxy_pass http://127.0.0.1:5000/agents/;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeout for agent heartbeats
        proxy_read_timeout 300;
    }
    
    # Static files (if any)
    location /static/ {
        alias /opt/soc-platform/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
    
    # Logging
    access_log /var/log/nginx/soc_platform_access.log;
    error_log /var/log/nginx/soc_platform_error.log;
}
