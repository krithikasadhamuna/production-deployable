# CORRECT NGINX Configuration for SOC Platform with /api/backend/ routing
# This preserves the /api/backend/ prefix as expected by Flask

server {
    listen 80;
    server_name dev.codegrey.ai;
    
    # Backend API routes - Preserves /api/backend/ prefix
    location /api/backend/ {
        # CORRECT - Preserves the full path
        proxy_pass http://127.0.0.1:5000/api/backend/;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        
        # Handle OPTIONS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain';
            return 204;
        }
        
        # Timeouts for long operations
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
    }
    
    # Frontend routes (Next.js on port 3000)
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# HTTPS configuration (when SSL is ready)
server {
    listen 443 ssl http2;
    server_name dev.codegrey.ai;
    
    ssl_certificate /etc/letsencrypt/live/dev.codegrey.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev.codegrey.ai/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    # Include all location blocks from above
    location /api/backend/ {
        proxy_pass http://127.0.0.1:5000/api/backend/;
        # ... rest of configuration same as above
    }
    
    location / {
        proxy_pass http://127.0.0.1:3000;
        # ... rest of configuration same as above
    }
}
